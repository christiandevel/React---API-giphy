{"version":3,"sources":["components/AddCatagory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCatagory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFechtGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OAEE,0BAAMC,SAXa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BACEO,KAAK,OACLC,MAAQT,EACRU,SAnBoB,SAACP,GACzBF,EAAeE,EAAEQ,OAAOF,QAmBpBG,YAAY,iC,uBC1BPC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEFI,MAAOF,GAFL,cAEfG,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCCPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIvC,OAFAc,QAAQC,IAAIN,EAAIC,EAAOV,GAGrB,yBAAKgB,UAAU,wBACb,yBAAKC,IAAMjB,EAAKkB,IAAMR,IACtB,2BAAKA,EAAL,OCLOS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAChBf,mBAAS,CACjCsB,KAAM,GACNe,SAAS,IAH+B,mBACnCC,EADmC,KAC5BC,EAD4B,KAgB1C,OAVAC,qBAAW,WACT1B,EAASC,GACN0B,MAAM,SAAAC,GACLH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGd,CAACtB,IAEGuB,EDb0BK,CAAa5B,GAAjCa,EAF0B,EAE/BN,KAAae,EAFkB,EAElBA,QAErB,OACE,oCACE,4BAAMtB,GAEJsB,GAAW,sCAEX,yBAAKJ,UAAU,aAETL,EAAOJ,KAAK,SAAEC,GAAF,OACV,kBAAC,EAAD,eACAmB,IAAMnB,EAAIC,IACND,UEdPoB,EAAe,WAAM,MAGI7C,mBAAS,CAAC,cAHd,mBAGzB8C,EAHyB,KAGb/C,EAHa,KAShC,OACE,oCACE,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAEI+C,EAAWtB,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACE6B,IAAM7B,EACNA,SAAYA,U,MCpB1BgC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.ef1c79a1.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCatagory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setinputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue( e.target.value )\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if( inputValue.trim().length > 2 ){\r\n      setCategories( cats => [inputValue, ...cats])\r\n      setinputValue('')\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <form onSubmit={ handleSubmit }>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange={ handleInputChange }\r\n        placeholder='Escribe una nueva cateoria'\r\n      />\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nAddCatagory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=fj4vJiW70BjhkH69hqKGEPrfLvuUOfBS`\r\n  const resp = await fetch( url );\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map( img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n  })\r\n\r\n  return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n  console.log(id, title, url);\r\n\r\n  return (\r\n    <div className='card animate__fadeIn'>\r\n      <img src={ url} alt={ title }/>\r\n      <p>{ title } </p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { useFechtGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFechtGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{ category }</h3>\r\n\r\n      { loading && <p>Loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n              images.map( ( img ) => (\r\n                <GifGridItem \r\n                key={ img.id }\r\n                {...img}\r\n                />\r\n                ))\r\n              }\r\n        </div>\r\n\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFechtGifs = ( category ) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect( () => {\r\n    getGifs( category )\r\n      .then( imgs => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        })\r\n      })\r\n  }, [category])\r\n\r\n  return state;\r\n}","\r\nimport React, { useState} from 'react'\r\nimport { AddCatagory } from './components/AddCatagory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n  // const categories = ['One Punch', 'Samurai X', 'Dragin Ball']\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  // const handleAdd = () => {\r\n  //   setCategories(['HunterXHunter', ...categories ]);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpert App</h2>\r\n      <AddCatagory setCategories={ setCategories }/>\r\n      <hr />\r\n\r\n    \r\n\r\n      <ol>\r\n        { \r\n          categories.map( category => (\r\n            <GifGrid \r\n              key={ category }\r\n              category= { category }\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}